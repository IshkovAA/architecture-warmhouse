{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/houses": {
            "get": {
                "description": "Получить список всех домов, связанных с пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Получение всех домов пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/web_schemas.HouseOut"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создать новый дом, связанный с пользователем, и вернуть информацию о доме",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Создание нового дома для пользователя",
                "parameters": [
                    {
                        "description": "New House",
                        "name": "house",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web_schemas.NewHouseIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web_schemas.HouseOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/houses/{id}": {
            "put": {
                "description": "Обновить информацию о существующем доме пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "houses"
                ],
                "summary": "Обновление информации о доме пользователя",
                "parameters": [
                    {
                        "description": "Updated House",
                        "name": "house",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web_schemas.UpdateHouseIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web_schemas.HouseOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Аутентификация пользователя с генерацией Access и Refresh токенов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web_schemas.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web_schemas.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/refresh-token": {
            "post": {
                "description": "Обновить Access и Refresh токены с использованием действующего Refresh токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновление токена доступа",
                "parameters": [
                    {
                        "description": "New User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web_schemas.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access и Refresh токены",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Зарегистрировать нового пользователя и получить Access и Refresh токены",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "New User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web_schemas.NewUserIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/web_schemas.NewUserOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/username/{username}": {
            "get": {
                "description": "Получить данные пользователя по его имени пользователя (username)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получение пользователя по имени пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{userId}": {
            "get": {
                "description": "Получить данные пользователя по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получение пользователя по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновить данные существующего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновление данных пользователя",
                "parameters": [
                    {
                        "description": "Updated User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/web_schemas.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presentation.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "presentation.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "web_schemas.HouseOut": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "house_id": {
                    "type": "integer"
                },
                "square": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "web_schemas.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "web_schemas.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "refresh_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "web_schemas.NewHouseIn": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "square": {
                    "type": "number"
                }
            }
        },
        "web_schemas.NewUserIn": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "web_schemas.NewUserOut": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "username": {
                    "description": "ID           uint `json:\"id\"`",
                    "type": "string"
                }
            }
        },
        "web_schemas.RefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "web_schemas.UpdateHouseIn": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "house_id": {
                    "type": "integer"
                },
                "square": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}