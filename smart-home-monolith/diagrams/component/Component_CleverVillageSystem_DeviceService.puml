@startuml
!include <C4/C4_Container>

LAYOUT_WITH_LEGEND()

Person(user, "Customer", "Пользователь системы 'Smart Home'")
Container(app_client, "Mobile Application", "iOS/Android", "Использует API контроллеров для взаимодействия с модулями умного дома")
Container(internal_system, "Internal System", "Микросервис", "Генерирует события и отправляет их в Kafka") #1368bd

System_Boundary(b_system, "Device Service") {
    Container(controller_modules_view, "Контроллер Просмотра Всех Модулей Компании", "Golang", "Предоставляет информацию о доступных к подключению модулей для клиента")
    Container(controller_module_management, "Контроллер Управления Модулями", "Golang", "Управляет модулями в доме: добавление, включение/выключение и отключение модуля")

    Container(publisher, "Publisher", "Издатель", "Публикует сообщения в Kafka о том что получен запрос на добавление модуля в новый дом")
    Container(processor, "Processor", "Обработчик", "Обрабатывает события из Kafka о том, что модуль может быть добавлен, его верифицировал другой сервис")

    ContainerDb(modules_db, "База Данных Модулей", "PostgreSQL", "Хранит информацию о подключенных модулях и их состоянии")
    ContainerQueue(kafka_broker, "Kafka", "Брокер Сообщений", "Принимает и хранит события системы")
}

Rel(app_client, controller_modules_view, "Запрашивает список доступных модулей", "HTTP")
Rel(app_client, controller_module_management, "Управляет подключенными модулями в доме", "HTTP")

Rel(user, app_client, "Использует мобильное приложение для управления системой")
Rel(controller_modules_view, modules_db, "Читает данные о доступных модулях компании", "GORM Golang")
Rel(controller_module_management, modules_db, "Меняет состояние оборудования", "GORM Golang")
Rel_L(internal_system, kafka_broker, "Отправляет события об верификации дома", "module.verification.topic")
Rel_U(publisher, kafka_broker, "Публикует сообщения о запросе на подключение дома", "module.addition.topic")
Rel(processor, kafka_broker, "Читает события о верификации дома для подключения", "module.verification.topic")
Rel_L(processor, modules_db, "Обновляет данные на основе верификации дома", "GORM Golang")

@enduml
