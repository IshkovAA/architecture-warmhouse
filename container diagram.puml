@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Уровень контейнеров с используемыми технологиями

Person(пользователь, "Пользователь", "Управляет устройствами и просматривает телеметрию через веб-интерфейс.")

System_Boundary(экосистема, "Экосистема умного дома") {
    Container(api_gateway, "API Gateway", "Маршрутизация запросов, аутентификация и авторизация.", "Spring Cloud Gateway, OAuth2")
    Container(device_management, "Управление устройствами", "Управление отоплением, освещением, воротами и другими устройствами.", "Spring Boot, Kafka Client, PostgreSQL")
    Container(monitoring_telemetry, "Мониторинг и телеметрия", "Сбор данных с датчиков, хранение и предоставление телеметрии.", "Spring Boot, Kafka Client, InfluxDB")
    Container(user_interface, "Пользовательский интерфейс", "Веб-интерфейс для управления устройствами и просмотра телеметрии.", "React, Node.js, WebSocket")
    Container(partner_integration, "Интеграция с устройствами партнёров", "Поддержка стандартных протоколов для подключения сторонних устройств.", "Spring Boot, MQTT, Kafka Client")
    Container(self_service, "Самообслуживание и настройка", "Управление пользовательскими настройками и конфигурациями.", "Spring Boot, Kafka Client, PostgreSQL")
    Container(kafka, "Шина данных (Kafka)", "Асинхронная передача сообщений между микросервисами.", "Apache Kafka")
}

' Взаимодействие между контейнерами
Rel(пользователь, api_gateway, "Управляет устройствами и просматривает телеметрию.")
Rel(api_gateway, kafka, "Отправка команд и запросов в Kafka.")
Rel(kafka, device_management, "Получение команд для управления устройствами.")
Rel(kafka, monitoring_telemetry, "Получение данных для мониторинга.")
Rel(kafka, user_interface, "Получение данных для отображения в интерфейсе.")
Rel(kafka, self_service, "Получение запросов на настройку.")
Rel(kafka, partner_integration, "Получение событий для интеграции с устройствами партнёров.")
Rel(device_management, kafka, "Отправка событий о состоянии устройств.")
Rel(monitoring_telemetry, kafka, "Отправка данных телеметрии.")
Rel(partner_integration, kafka, "Отправка событий о подключении устройств.")
Rel(self_service, kafka, "Отправка событий о настройках пользователей.")
Rel(user_interface, kafka, "Отправка запросов на получение данных.")

@enduml